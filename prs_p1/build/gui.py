'''we have 
list
function
functions with parameters
try-except
if-else
working with files (find and open img)
'''
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import random


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\R2D2\Documents\–¢–∞–º–∏–ª–∞_2\study\exam\prs_p1\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


images_list = ['–±—É–º–∞–≥–∞.png',
        '–∫–∞–º–µ–Ω—å.png',
        '–Ω–æ–∂–Ω–∏—Ü—ã.png']
window = Tk()

window.geometry("502x344")
window.configure(bg = "#8DA8F7")



    

canvas = Canvas(
    window,
    bg = "#8DA8F7",
    height = 344,
    width = 502,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)
score_user = 0
score_robot = 0

def game(get):
    global robot_photo, score_user, score_robot
    
    choise_user = get
    ### test choise_user
    print('—Ç—ã –≤—ã–±—Ä–∞–ª: ',choise_user)
    img_path = relative_to_assets(random.choice(images_list))
    # image_image_1.config(file=img_path)
    robot_photo = PhotoImage(file = img_path)
    canvas.itemconfig(image_1, image = robot_photo)
    ### test choise_robot
    file_name = img_path.name
    choise_robot = file_name
    print("—Ä–æ–±–æ—Ç –≤—ã–±—Ä–∞–ª: ", file_name) 
    # internal_name = canvas.itemcget(image_1, "image")
    # print("–í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è:", internal_name) 
    # print("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:", file_name) 
    
    try:
        winner = ''
        if choise_robot == '–±—É–º–∞–≥–∞.png' and choise_user == '–∫–∞–º–µ–Ω—å':
            print('—Ä–æ–±–æ—Ç –≤—ã–π–≥—Ä–∞–ª', end=' ü§ñ\n')
            winner = '—Ä–æ–±–æ—Ç\nü§ñüèÜ'
            score_robot += 1
        elif choise_robot == '–∫–∞–º–µ–Ω—å.png' and choise_user == '–Ω–æ–∂–Ω–∏—Ü—ã':
            print('—Ä–æ–±–æ—Ç –≤—ã–π–≥—Ä–∞–ª', end=' ü§ñ\n')
            winner = '—Ä–æ–±–æ—Ç\nü§ñüèÜ'
            score_robot += 1
        elif choise_robot == '–Ω–æ–∂–Ω–∏—Ü—ã.png' and choise_user == '–±—É–º–∞–≥–∞':
            print('—Ä–æ–±–æ—Ç –≤—ã–π–≥—Ä–∞–ª', end=' ü§ñ\n')
            winner = '—Ä–æ–±–æ—Ç\nü§ñüèÜ'
            score_robot += 1
        elif choise_robot == '–Ω–æ–∂–Ω–∏—Ü—ã.png' and choise_user == '–Ω–æ–∂–Ω–∏—Ü—ã':
            print('–Ω–∏—á—å—è', end=' ‚öîÔ∏è\n')
            winner = '–Ω–∏—á—å—è\n‚öîÔ∏è'
        elif choise_robot == '–±—É–º–∞–≥–∞.png' and choise_user == '–±—É–º–∞–≥–∞':
            print('–Ω–∏—á—å—è', end=' ‚öîÔ∏è\n')
            winner = '–Ω–∏—á—å—è\n‚öîÔ∏è'
        elif choise_robot == '–∫–∞–º–µ–Ω—å.png' and choise_user == '–∫–∞–º–µ–Ω—å':
            print('–Ω–∏—á—å—è', end=' ‚öîÔ∏è\n')
            winner = '–Ω–∏—á—å—è\n‚öîÔ∏è'
        else:
            print("—Ç—ã –≤—ã–π–≥—Ä–∞–ª", end=' üèÜ\n')
            winner = '—Ç—ã\n—É—Ä–∞ü•≥üèÜ'
            score_user += 1
        canvas.itemconfig(score, text = f'{score_user}:{score_robot}')
        message_info = messagebox.showinfo(title= 'INFO', message= f'–≤—ã–π–≥—Ä–∞–ª - {winner}')
    except:
        print('error')
    # if choise_user == '–±—É–º–∞–≥–∞.png':
    #     print('this work')
    # elif choise_user == '–∫–∞–º–µ–Ω—å.png':
    #     print('this work')
    # elif choise_user == '–Ω–æ–∂–Ω–∏—Ü—ã.png':
    #     print('this work')
    # else:
    #     print("error")


canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    394.0,
    158.0,
    image=image_image_1
)

canvas.create_text(
    82.0,
    46.0,
    anchor="nw",
    text="Your choice ",
    fill="#000000",
    font=("MadimiOne Regular", 18 * -1)
)

canvas.create_text(
    357.0,
    46.0,
    anchor="nw",
    text="Robot",
    fill="#000000",
    font=("MadimiOne Regular", 18 * -1)
)

canvas.create_rectangle(
    312.0,
    59.0,
    313.0,
    257.0,
    fill="#000000",
    outline="")

button_image_1 = PhotoImage(
    file=relative_to_assets("–±—É–º–∞–≥–∞.png"))
button_1 = Button(
    bg= "#8EA8F8",
    activebackground= "#8EA8F8",
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: game('–±—É–º–∞–≥–∞'),
    relief="flat"   )
button_1.place(
    x=64.0,
    y=157.0,
    width=58.0,
    height=62.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("–∫–∞–º–µ–Ω—å.png"))
button_2 = Button(
    bg= "#8EA8F8",
    activebackground= "#8EA8F8",
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: game('–∫–∞–º–µ–Ω—å'),
    relief="flat"
)
button_2.place(
    x=135.0,
    y=94.0,
    width=58.0,
    height=62.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("–Ω–æ–∂–Ω–∏—Ü—ã.png"))
button_3 = Button(
    bg= "#8EA8F8",
    activebackground= "#8EA8F8",
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: game("–Ω–æ–∂–Ω–∏—Ü—ã"),
    relief="flat"
)
button_3.place(
    x=200.0,
    y=157.0,
    width=58.0,
    height=62.0
)

canvas.create_text(
    294.0,
    289.0,
    anchor="nw",
    text="score",
    fill="#000000",
    font=("MadimiOne Regular", 20 * -1)
)

score = canvas.create_text(
    294.0,
    257.0,
    anchor="nw",
    text="0:0",
    fill="#000000",
    font=("PixelifySans Regular", 27 * -1)
)
window.resizable(False, False)
window.mainloop()
